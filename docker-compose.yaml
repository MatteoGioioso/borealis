services:
  console:
    container_name: console
    image: borealis/console:latest
    restart: on-failure
    build:
      dockerfile: console.Dockerfile
      args:
        USER: console
        GROUP: borealis
      context: console
    environment:
      AUTH_TYPE: disabled
      LOG_LEVEL: debug
      CLICKHOUSE_HOST: clickhouse
      PROMETHEUS_HOST: victoriametrics
      LOKI_HOST: loki
      CONSOLE_DISABLED: 1
      NGINX_DISABLED: 1
      GF_FEATURE_TOGGLES_ENABLE: accessControlOnCall
    ports:
      - "8082:8082"
      - "8081:8081"
      - "3001:3001"
      - "3000:3000"

  agent:
    image: borealis/agent:latest
    container_name: agent
    build:
      dockerfile: agent.Dockerfile
      context: agent
      args:
        USER: agent
        GROUP: borealis
    environment:
        PROMETHEUS_HOST: victoriametrics
        BOREALIS_HOST: console
        LOKI_HOST: loki
        AGENT_DISABLED: 1
        INSTANCE_NAMES: postgres_one
        postgres_one_CLUSTER_NAME: mycluster
        postgres_one_HOST: postgres_one
        postgres_one_PASSWORD: zalando
        postgres_one_USERNAME: postgres
    ports:
      - "9187:9187"
    volumes:
      - postgres-logs-volume:/logs/postgres

  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - "9001:9000"
      - "8123:8123"

  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics
    ports:
      - "8428:8428"
      - "8089:8089"
      - "8089:8089/udp"
      - "2003:2003"
      - "2003:2003/udp"
      - "4242:4242"
    command:
      - "--storageDataPath=/storage"
      - "--graphiteListenAddr=:2003"
      - "--opentsdbListenAddr=:4242"
      - "--httpListenAddr=:8428"
      - "--influxListenAddr=:8089"
    restart: always

  loki:
    container_name: loki
    image: grafana/loki:main
    command: '-config.file=/data/loki-config.yaml'
    ports:
      - '3100:3100'
    volumes:
      - data-volume:/data

  pgbench:
    container_name: pgbench
    image: borealis/pgbench:latest
    build:
      dockerfile: pgbench.Dockerfile
      context: misc/pg_bench
    command: postgres_one
    environment:
      PGUSER: postgres
      PGPASSWORD: zalando
      PGDATABASE: postgres

  postgres_one:
    image: ghcr.io/zalando/spilo-16:3.3-p2
    hostname: postgres_one
    ports:
      - "5432:5432"
    container_name: postgres_one
    environment:
      SPILO_CONFIGURATION: '{ "postgresql": { "log_destination": "stderr", "parameters": {"shared_preload_libraries": "bg_mon,pg_stat_statements,pg_stat_kcache,pgextwlist,pg_auth_mon,set_user,pg_cron"}, "pg_hba": [ "local all all trust","local replication standby trust", "host all  all  0.0.0.0/0 md5", "hostssl replication standby all md5" ] } }'
      SCOPE: mycluster
      PGVERSION: '16'
      DOMAIN_NAME: 'domain.com.'
      CLUSTER_NAME: mycluster
    volumes:
      - ./misc/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-logs-volume:/home/postgres/pgdata/pgroot/pg_log

volumes:
  postgres-logs-volume:
  data-volume:
    external: true
    name: data-volume
